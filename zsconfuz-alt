#!/bin/bash

# This program has almost the same interface as zsconfuz
#   and simulates it using ninja
# (C) 2019 Erik Zscheile
# License: ISC

IS_VERBOSE=false IS_RESUME=false

while [ $# -gt 1 ]; do
  case "$1" in
    (--resume)  IS_RESUME=true ;;
    (--verbose) IS_VERBOSE=true; NINJAOPTS+=" -v" ;;
    (*)         NINJAOPTS+=" $1" ;;
  esac
  shift
done

if ! [ -f "$1" ]; then
cat <<EOF
USAGE: zsconfuz-alt [--verbose] [-jN] [--resume] [NINJAOPTS] ZSconfuz-file.txt
Options:
  -jN         use N workers
  --verbose   print executed commands
  --resume    (specific to zsconfuz-alt) keep temporary files
EOF
  exit 1
fi

cleanup() {
  "$IS_RESUME" || rm -rf "$(readlink .zscfzFiles)" .zscfzFiles .ninja_*
}

prnx() {
  "$IS_VERBOSE" && echo "$@" || true
  "$@"
}

trap cleanup EXIT
export PATH="$(dirname "$0")/../libexec/zsconfuz-alt:$PATH" NINJA_STATUS_SLEEP=inf
if ! "$IS_RESUME"; then
  TMPD="$(mktemp -d)"
  [ $? -eq 0 ] || exit 1
  rm -rf .zscfzFiles && ln -sT "$TMPD" .zscfzFiles || { rm -rf "$TMPD"; exit 1; }
  unset TMPD
else
  mkdir -p .zscfzFiles
fi

set -e
F1=".zscfzFiles/zscfz.txt" F2=".zscfzFiles/zscfz2.txt"
cp -f "$1" "$F1"
while true; do
  "$IS_VERBOSE" && echo zscfz2ninja || true
  zscfz2ninja < "$F1" > .zscfzFiles/build.ninja
  rm -f "$F2" && touch "$F2" || true
  prnx ninja -C .zscfzFiles $NINJAOPTS
  [ -s "$F2" ] || break
  (
    echo
    echo ": \"\""
    cat "$F2"
  ) >> "$F1"
done
